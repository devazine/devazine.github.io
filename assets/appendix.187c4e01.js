import{f as o}from"./vendor.508f1f42.js";const c=o('<h1>\u4E00. \u5173\u952E\u5B57\u548C\u4FDD\u7559\u7B26\u53F7</h1><h2>1.1 \u5173\u952E\u5B57</h2><p>Swift \u8BED\u8A00\u5185\u7F6E\u4E86\u4E00\u4E9B\u5177\u6709\u7279\u6B8A\u7528\u9014\u7684\u5355\u8BCD\uFF0C\u6211\u4EEC\u79F0\u4E4B\u4E3A\u5173\u952E\u5B57\u3002</p><p>\u6839\u636E\u4F7F\u7528\u65B9\u5F0F\u548C\u5F62\u5F0F\uFF0C\u5173\u952E\u5B57\u5F52\u7C7B\u5982\u4E0B\uFF1A</p><div class="list-large"><ul><li><p><strong>\u2474 \u7528\u5728\u58F0\u660E\u4E2D\u7684\u5173\u952E\u5B57</strong><br><code>associatedtype</code>\u3001<code>class</code>\u3001<code>deinit</code>\u3001<code>enum</code>\u3001<code>extension</code>\u3001<code>fileprivate</code>\u3001<code>func</code>\u3001<code>import</code>\u3001<code>init</code>\u3001<code>inout</code>\u3001<code>internal</code>\u3001<code>let</code>\u3001<code>open</code>\u3001<code>operator</code>\u3001<code>private</code>\u3001<code>precedencegroup</code>\u3001<code>protocol</code>\u3001<code>public</code>\u3001<code>rethrows</code>\u3001<code>static</code>\u3001<code>struct</code>\u3001<code>subscript</code>\u3001<code>typealias</code>\u3001<code>var</code>\uFF1B</p></li><li><p><strong>\u2475 \u7528\u5728\u8BED\u53E5\u4E2D\u7684\u5173\u952E\u5B57</strong><br><code>break</code>\u3001<code>case</code>\u3001<code>catch</code>\u3001<code>continue</code>\u3001<code>default</code>\u3001<code>defer</code>\u3001<code>do</code>\u3001<code>else</code>\u3001<code>fallthrough</code>\u3001<code>for</code>\u3001<code>guard</code>\u3001<code>if</code>\u3001<code>in</code>\u3001<code>repeat</code>\u3001<code>return</code>\u3001<code>throw</code>\u3001<code>switch</code>\u3001<code>where</code>\u3001<code>while</code>\uFF1B</p></li><li><p><strong>\u2476 \u7528\u5728\u8868\u8FBE\u5F0F\u548C\u7C7B\u578B\u4E2D\u7684\u5173\u952E\u5B57</strong><br><code>Any</code>\u3001<code>as</code>\u3001<code>catch</code>\u3001<code>false</code>\u3001<code>is</code>\u3001<code>nil</code>\u3001<code>rethrows</code>\u3001<code>self</code>\u3001<code>Self</code>\u3001<code>super</code>\u3001<code>throw</code>\u3001<code>throws</code>\u3001<code>true</code>\u3001<code>try</code>\uFF1B</p></li><li><p><strong>\u2477 \u7528\u5728\u6A21\u5F0F\u4E2D\u7684\u5173\u952E\u5B57</strong><br>\u53EA\u6709\u4E00\u4E2A <code>_</code>\uFF1B</p></li><li><p><strong>\u2478 \u4EE5\u4E95\u5B57\u53F7\uFF08<code>#</code>\uFF09\u5F00\u5934\u7684\u5173\u952E\u5B57</strong><br><code>#available</code>\u3001<code>#colorLiteral</code>\u3001<code>#column</code>\u3001<code>#dsohandle</code>\u3001<code>#elseif</code>\u3001<code>#else</code>\u3001<code>#endif</code>\u3001<code>#error</code>\u3001<code>#fileID</code>\u3001<code>#fileLiteral</code>\u3001<code>#filePath</code>\u3001<code>#file</code>\u3001<code>#function</code>\u3001<code>#if</code>\u3001<code>#imageLiteral</code>\u3001<code>#keyPath</code>\u3001<code>#line</code>\u3001<code>#selector</code>\u3001<code>#sourceLocation</code>\u3001<code>#warning</code>\uFF1B</p></li><li><p><strong>\u2479 \u7279\u5B9A\u4E0A\u4E0B\u6587\u4E2D\u88AB\u4FDD\u7559\u7684\u5173\u952E\u5B57</strong><br><code>associativity</code>\u3001<code>convenience</code>\u3001<code>didSet</code>\u3001<code>dynamic</code>\u3001<code>final</code>\u3001<code>get</code>\u3001<code>indirect</code>\u3001<code>infix</code>\u3001<code>lazy</code>\u3001<code>left</code>\u3001<code>mutating</code>\u3001<code>none</code>\u3001<code>nonmutating</code>\u3001<code>optional</code>\u3001<code>override</code>\u3001<code>postfix</code>\u3001<code>precedence</code>\u3001<code>prefix</code>\u3001<code>Protocol</code>\u3001<code>required</code>\u3001<code>right</code>\u3001<code>set</code>\u3001<code>some</code>\u3001<code>Type</code>\u3001<code>unowned</code>\u3001<code>weak</code>\u3001<code>willSet</code>\u3002</p></li></ul></div><h2>1.2 \u4FDD\u7559\u7B26\u53F7</h2><p>Swift \u5185\u90E8\u4E5F\u4FDD\u7559\u4E86\u4E00\u4E9B\u7B26\u53F7\u7528\u4F5C\u4E8E\u8BA1\u7B97\u6216\u8BED\u6CD5\u4EE4\u724C\uFF0C\u5E38\u89C1\u7684\u4FDD\u7559\u7B26\u53F7\u5982\u4E0B\uFF1A</p><p><code>(</code>\u3001<code>)</code>\u3001<code>{</code>\u3001<code>}</code>\u3001<code>[</code>\u3001<code>]</code>\u3001<code>.</code>\u3001<code>,</code>\u3001<code>:</code>\u3001<code>;</code>\u3001<code>=</code>\u3001<code>@</code>\u3001<code>#</code>\u3001<code>&amp;</code>\u3001<code>+</code>\u3001<code>-</code>\u3001<code>*</code>\u3001<code>/</code>\u3001<code>%</code>\u3001<code>&lt;</code>\u3001<code>&gt;</code>\u3001<code>`</code>\u3001<code>?</code>\u3001<code>!</code>\u3001<code>$</code>\u3002</p>',8);function d(t,i){return c}const e={render:d};e.__hmrId="/Users/lanbangjue/Documents/GitHub/devazine/src/pages/swift/markdowns/appendix.md";e.__toc=[{level:"1",content:"&#x4E00;. &#x5173;&#x952E;&#x5B57;&#x548C;&#x4FDD;&#x7559;&#x7B26;&#x53F7;"},{level:"2",content:"1.1 &#x5173;&#x952E;&#x5B57;"},{level:"2",content:"1.2 &#x4FDD;&#x7559;&#x7B26;&#x53F7;"}];export{e as default};
