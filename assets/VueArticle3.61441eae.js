import{f as e,o as u,c as l,F as k,a as s,p as t,d as a,e as n}from"./vendor.0c335c01.js";import{C as R}from"./CodePen.71fb2b38.js";import{_ as V}from"./index.5e2d43ec.js";import"./createjs.df35218d.js";const K=e(`<h1>\u4E00. \u6700\u7B80\u5355\u7684\u54CD\u5E94\u5F0F\u793A\u4F8B</h1><h2>1.1 Proxy</h2><p>Vue 3 \u629B\u5F03\u4E86 <code>Object.defineProperty</code>\uFF0C\u6539\u7528 <code>Proxy</code> \u6765\u4F5C\u4E3A\u89C2\u5BDF\u54CD\u5E94\u5F0F\u5BF9\u8C61\u53D8\u66F4\u7684\u5E95\u5C42\u63A5\u53E3\u3002 \u8FD9\u662F\u56E0\u4E3A\u5BF9\u4E8E\u5177\u6709\u591A\u4E2A\u5C5E\u6027\u7684\u5BF9\u8C61\u6765\u8BF4\uFF0C<code>Proxy</code> \u53EA\u9700\u8C03\u7528\u4E00\u6B21\u4FBF\u80FD\u76D1\u542C\u5230\u5168\u90E8\u5C5E\u6027\u7684\u53D8\u52A8\uFF0C\u800C <code>Object.defineProperty</code> \u6BCF\u6B21\u8C03\u7528\u65F6\u53EA\u80FD\u76D1\u542C\u5355\u4E2A\u5C5E\u6027\uFF0C\u9700\u8981\u901A\u8FC7\u904D\u5386\u5BF9\u8C61\u5C5E\u6027\u6765\u8FBE\u6210\u5B8C\u6574\u7684\u76D1\u542C\u80FD\u529B\uFF0C\u6548\u7387\u5F88\u4F4E\uFF1A</p><div><pre class="fr w-45 language-js"><code class="language-js"><span class="token comment">/** Object.defineProperty \u793A\u4F8B **/</span>

<span class="token keyword">var</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;VaJoy&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">country</span><span class="token operator">:</span> <span class="token string">&#39;China&#39;</span>
<span class="token punctuation">}</span>

<span class="token keyword">let</span> value <span class="token operator">=</span> obj<span class="token punctuation">.</span>name<span class="token punctuation">;</span>
Object<span class="token punctuation">.</span><span class="token function">defineProperty</span><span class="token punctuation">(</span>obj<span class="token punctuation">,</span> <span class="token string">&#39;name&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
    <span class="token function">get</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;Getting name...&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">return</span> value
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token function">set</span><span class="token punctuation">(</span>newVal<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;Setting name...&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      value <span class="token operator">=</span> newVal<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

obj<span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token string">&#39;Tom&#39;</span><span class="token punctuation">;</span>
obj<span class="token punctuation">.</span>country <span class="token operator">=</span> <span class="token string">&#39;USA&#39;</span><span class="token punctuation">;</span>

<span class="token comment">// Setting name...</span>
</code></pre><p class="fr w-45 mt-10">\u{1F4A1} <code>Object.defineProperty</code> \u53EA\u76D1\u542C\u548C\u6253\u5370\u51FA\u4E86 <code>name</code> \u5C5E\u6027\u7684\u53D8\u52A8\u3002</p></div><pre class="language-js"><code class="language-javascript"><span class="token comment">/** Proxy \u793A\u4F8B **/</span>

<span class="token keyword">var</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;VaJoy&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">country</span><span class="token operator">:</span> <span class="token string">&#39;China&#39;</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> observedObj <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Proxy</span><span class="token punctuation">(</span>obj<span class="token punctuation">,</span> <span class="token punctuation">{</span>
    <span class="token function">get</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> key<span class="token punctuation">,</span> receiver<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> res <span class="token operator">=</span> Reflect<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> key<span class="token punctuation">,</span> receiver<span class="token punctuation">)</span><span class="token punctuation">;</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Getting </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>key<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">...</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">return</span> res
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token function">set</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> key<span class="token punctuation">,</span> newVal<span class="token punctuation">,</span> receiver<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> res <span class="token operator">=</span> Reflect<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> key<span class="token punctuation">,</span> newVal<span class="token punctuation">,</span> receiver<span class="token punctuation">)</span><span class="token punctuation">;</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Setting </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>key<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">...</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">return</span> res
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

observedObj<span class="token punctuation">.</span>name <span class="token operator">=</span> <span class="token string">&#39;Tom&#39;</span><span class="token punctuation">;</span>
observedObj<span class="token punctuation">.</span>country <span class="token operator">=</span> <span class="token string">&#39;USA&#39;</span><span class="token punctuation">;</span>

<span class="token comment">// Setting name...</span>
<span class="token comment">// Setting country...</span>
</code></pre><p>\u5982\u679C\u4F60\u5BF9 <code>Proxy</code> \u8FD8\u4E0D\u719F\u6089\uFF0C\u8BF7\u5148\u9605\u8BFB\u76F8\u5173\u7684<a href="https://es6.ruanyifeng.com/#docs/proxy">\u4ECB\u7ECD\u6587\u6863</a>\u3002</p><h2>1.2 \u7B80\u5355\u7684\u793A\u4F8B</h2><p>\u5229\u7528 <code>Proxy</code> \u7684\u7279\u6027\uFF0C\u6211\u4EEC\u53EF\u4EE5\u5B9E\u73B0\u4E00\u4E2A\u6700\u7B80\u5355\u7684\u54CD\u5E94\u5F0F\u793A\u4F8B\uFF1A</p>`,8);function T(p,o){return K}const i={render:T};i.__hmrId="/Users/lanbangjue/Documents/GitHub/devazine/src/pages/fe/source-analysis/vue/markdowns/3-1.md";i.__toc=[];const P=e(`<blockquote class="fr w-30"><p>\u526F\u4F5C\u7528\uFF08Side Effects\uFF09\u51FD\u6570\uFF1A\u4F1A<strong>\u4E0E\u5916\u90E8\u53EF\u53D8\u72B6\u6001\u8FDB\u884C\u4EA4\u4E92</strong>\u7684\u51FD\u6570\u3002</p></blockquote><p>\u5728\u8BE5\u793A\u4F8B\u4E2D\uFF0C\u6211\u4EEC\u901A\u8FC7 <code>Proxy</code> \u62E6\u622A\u4E86\u76EE\u6807\u5BF9\u8C61\u7684\u5C5E\u6027\u8D4B\u503C\u884C\u4E3A\uFF0C\u8BA9\u5176\u5728\u5BF9\u5C5E\u6027\u8FDB\u884C\u8D4B\u503C\u65F6\uFF0C\u89E6\u53D1 <code>viewEffect</code> \u51FD\u6570\u3002 <br><code>viewEffect</code> \u5219\u901A\u8FC7\u5BF9\u5916\u7684 <code>setViewEffect</code> \u63A5\u53E3\uFF0C\u88AB\u91CD\u5199\u4E3A\u89C6\u56FE\u5C42\u548C\u5BF9\u8C61\u5C5E\u6027\u4EA4\u4E92\u7684\u526F\u4F5C\u7528\u51FD\u6570\uFF1A</p><pre class="shrink-30 language-js"><code class="language-js">  <span class="token function">setViewEffect</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    div<span class="token punctuation">.</span>innerText <span class="token operator">=</span> obj<span class="token punctuation">.</span>msg <span class="token operator">||</span> <span class="token string">&#39;&#39;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><p>\u56E0\u6B64\u5F53 <code>obj.msg</code> \u88AB\u8D4B\u503C\u4E3A <code>Bye bye.</code> \u65F6\uFF0C<code>Proxy</code> \u4F1A\u62E6\u622A\u5E76\u89E6\u53D1\u88AB\u7528\u6237\u91CD\u65B0\u5B9A\u4E49\u4E86\u7684 <code>viewEffect</code> \u51FD\u6570\u7684\u6267\u884C\u3002</p><h1>\u4E8C. Track \u548C Trigger</h1><p>\u4E0A\u8FF0\u7684\u793A\u4F8B\u5B58\u5728\u5F88\u591A\u95EE\u9898\uFF0C\u4F8B\u5982\u5F53\u7528\u6237\u6BCF\u6B21\u91CD\u65B0\u8C03\u7528 <code>setViewEffect</code> \u63A5\u53E3\u65F6\uFF0C<code>viewEffect</code> \u51FD\u6570\u90FD\u4F1A\u88AB\u8986\u76D6\uFF0C\u5BFC\u81F4\u4E4B\u524D\u5B9A\u4E49\u8FC7\u7684\u526F\u4F5C\u7528\u51FD\u6570\u90FD\u5931\u6548\u4E86\u3002 <br> \u53E6\u5916\u7528\u6237\u6240\u5B9A\u4E49\u7684\u526F\u4F5C\u7528\u51FD\u6570\uFF0C\u548C\u54CD\u5E94\u5F0F\u5BF9\u8C61\u7684\u5C5E\u6027\u6CA1\u6709\u4EFB\u4F55\u6620\u5C04\u5173\u7CFB\uFF0C\u4EFB\u4F55\u5C5E\u6027\u7684\u6539\u53D8\u90FD\u4F1A\u89E6\u53D1\u526F\u4F5C\u7528\u51FD\u6570\u7684\u6267\u884C\uFF0C\u8FD9\u4E5F\u662F\u5F88\u4E0D\u5408\u7406\u7684\u3002</p><p>Vue 3 \u4E2D\u4F7F\u7528\u4E86\u89C2\u5BDF\u8005\u6A21\u5F0F\u6765\u5B9E\u73B0\u54CD\u5E94\u5F0F\u4E8B\u4EF6\u7684\u6536\u96C6\u548C\u5206\u53D1\uFF0C\u5176\u6536\u96C6\u3001\u5206\u53D1\u7684\u884C\u4E3A\u7531 <code>track</code> \u548C <code>trigger</code> \u65B9\u6CD5\u5B9E\u73B0\uFF1A</p><blockquote class="fr w-50"><p><code>track</code> \u4F1A\u5728\u54CD\u5E94\u5F0F\u5BF9\u8C61\u7684\u5C5E\u6027\u88AB\u8BBF\u95EE\u65F6\uFF0C\u5C06\u8BE5\u5BF9\u8C61\u4F5C\u4E3A\u952E\u5B58\u5165\u540D\u4E3A <code>targetMap</code> \u7684 <code>WeakMap</code> \u5BB9\u5668\u4E2D\uFF0C\u5BF9\u5E94\u503C\u662F\u4E00\u4E2A<strong>\u4EE5\u88AB\u8BBF\u95EE\u5C5E\u6027\u4E3A\u952E\uFF0C\u4EE5\u5C5E\u6027\u88AB\u8BBF\u95EE\u65F6\u7684\u526F\u4F5C\u7528\u51FD\u6570\u7684\u53BB\u91CD\u96C6\u5408\u4E3A\u503C</strong>\u7684 <code>Map</code> \u5BF9\u8C61\u3002\u4E0B\u56FE\u6F14\u793A\u4E86\u4E24\u4E2A\u54CD\u5E94\u5F0F\u5BF9\u8C61\uFF0C\u5728\u8BE5 <code>WeakMap</code> \u4E2D\u5B58\u653E\u7684\u60C5\u51B5\uFF08\u7EA2\u8272\u7684\u5C5E\u6027\u8868\u793A\u88AB\u8BBF\u95EE\u8FC7\uFF09\uFF1A</p></blockquote><p class="fr w-50 mb-0"><img src="https://raw.githubusercontent.com/devazine2022/assets/main/vue-pic-0.jpg" alt></p><pre class="shrink-40 language-js"><code class="language-js"><span class="token keyword">const</span> targetMap <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">WeakMap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// \u8FFD\u8E2A\u3001\u6536\u96C6\u4F9D\u8D56\uFF08\u4F1A\u5728 Proxy \u7684 get \u62E6\u622A\u5C5E\u6027\u4E2D\u8C03\u7528\u8BE5\u65B9\u6CD5\uFF09</span>
<span class="token keyword">const</span> <span class="token function-variable function">track</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">target<span class="token punctuation">,</span> key</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> depsMap <span class="token operator">=</span> targetMap<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>target<span class="token punctuation">)</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>depsMap<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        targetMap<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> <span class="token punctuation">(</span>depsMap <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Map</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">let</span> dep <span class="token operator">=</span> depsMap<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>dep<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        depsMap<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> <span class="token punctuation">(</span>dep <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    dep<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>viewEffect<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">// \u89E6\u53D1\uFF08\u4F1A\u5728 Proxy \u7684 set \u62E6\u622A\u5C5E\u6027\u4E2D\u8C03\u7528\u8BE5\u65B9\u6CD5\uFF09</span>
<span class="token keyword">const</span> <span class="token function-variable function">trigger</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">target<span class="token punctuation">,</span> key<span class="token punctuation">,</span> value</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> depsMap <span class="token operator">=</span> targetMap<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>target<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>depsMap<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u672A\u88AB\u8FFD\u8E2A\u8FC7</span>
        <span class="token keyword">return</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">const</span> viewEffects <span class="token operator">=</span> depsMap<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span>
    viewEffects<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">effectFn</span> <span class="token operator">=&gt;</span> <span class="token function">effectFn</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><p>\u5728\u54CD\u5E94\u5F0F\u5BF9\u8C61\u7684\u5C5E\u6027\u88AB\u4FEE\u6539\u65F6\uFF0C<code>trigger</code> \u4F1A\u4ECE <code>targetMap</code> \u5BB9\u5668\u4E2D\u68C0\u7D22\u5230\u8BE5\u5C5E\u6027\u5148\u524D\u88AB\u6536\u96C6\u5230\u7684\u526F\u4F5C\u7528\u51FD\u6570\u96C6\u5408\uFF0C\u901A\u8FC7\u904D\u5386\u8BE5\u96C6\u5408\u6765\u6267\u884C\u6BCF\u4E2A\u526F\u4F5C\u7528\u51FD\u6570\uFF0C\u5373\u53EF\u8FBE\u6210\u54CD\u5E94\u5F0F\u7684\u6548\u679C\u3002</p><p>\u6211\u4EEC\u5C06 <code>track</code> \u548C <code>trigger</code> \u653E\u5165 <code>Proxy</code> \u4E2D\u7684 <code>get / set</code> \u62E6\u622A\u5668\u5185\uFF0C\u6765\u5B8C\u5584\u5148\u524D\u7684 <code>reactive</code> \u51FD\u6570\uFF1A</p>`,12);function O(p,o){return P}const r={render:O};r.__hmrId="/Users/lanbangjue/Documents/GitHub/devazine/src/pages/fe/source-analysis/vue/markdowns/3-2.md";r.__toc=[];const $=e("<p>\u6CE8\u610F\u6B64\u5904\u6211\u4EEC\u8FD8\u5B9A\u4E49\u4E86\u4E00\u4E2A\u540D\u4E3A <code>proxyMap</code> \u7684 <code>WeakMap</code>\uFF0C\u4F5C\u4E3A\u54CD\u5E94\u5F0F\u5BF9\u8C61\u7684\u7F13\u5B58\u5BB9\u5668\u3002\u8FD9\u662F\u56E0\u4E3A\u540C\u4E00\u4E2A\u5BF9\u8C61\u4E0D\u9700\u8981\u88AB\u91CD\u590D\u4EE3\u7406\u3002</p><blockquote><p><code>WeakMap</code> \u7684\u952E\u540D\u6240\u5F15\u7528\u7684\u5BF9\u8C61\u90FD\u662F\u5F31\u5F15\u7528\uFF08\u5373\u5783\u573E\u56DE\u6536\u673A\u5236\u4E0D\u5C06\u8BE5\u5F15\u7528\u8003\u8651\u5728\u5185\uFF09\uFF0C\u4E00\u65E6\u8BE5\u5BF9\u8C61\u5728 <code>WeakMap</code> \u5916\u90E8\u7684\u5F15\u7528\u88AB\u6E05\u9664\u4E86\uFF0C<code>WeakMap</code> \u91CC\u5BF9\u5E94\u7684\u8BE5\u5BF9\u8C61\u7684\u952E\u503C\u5BF9\u4F1A\u540C\u6B65\u88AB\u79FB\u9664\uFF08\u65E0\u9700\u624B\u52A8\u4ECE <code>WeakMap</code> \u4E2D\u5220\u9664\uFF09\u3002\u8FD9\u662F Vue \u91C7\u7528 <code>WeakMap</code> \u4F5C\u4E3A\u5BF9\u8C61\u7F13\u5B58\u5BB9\u5668\u7C7B\u578B\u7684\u539F\u56E0\u3002</p></blockquote><h1>\u4E09\u3001\u529F\u80FD\u5B8C\u5584</h1><h2>3.1 \u5D4C\u5957\u5C5E\u6027\u5904\u7406</h2><p><code>Proxy</code> \u53EA\u80FD\u62E6\u622A\u6700\u5916\u5C42\u5C5E\u6027\u7684\u53D8\u66F4\uFF0C\u82E5\u4EE3\u7406\u5BF9\u8C61\u5B58\u5728\u7C7B\u578B\u4E5F\u662F <code>Object</code> \u7684\u5C5E\u6027\u503C\u65F6\uFF0C\u8BE5\u5C5E\u6027\u5BF9\u8C61\u7684\u5B50\u5C5E\u6027\u5C06\u65E0\u6CD5\u88AB\u540C\u6B65\u4EE3\u7406\u5230\u3002</p><p>\u4E3A\u4E86\u8BA9\u5B58\u5728\u591A\u5C42\u5C5E\u6027\u7684\u5BF9\u8C61\uFF0C\u5176\u5D4C\u5957\u5C5E\u6027\u5747\u53EF\u88AB\u6B63\u786E\u5730\u4EE3\u7406\u5230\uFF0C\u6211\u4EEC\u53EA\u9700\u8981\u5728 <code>get</code> \u62E6\u622A\u5668\u4E2D\u65B0\u589E\u4E00\u4E2A\u5224\u65AD \u2014\u2014 \u82E5\u88AB\u8BBF\u95EE\u7684\u5C5E\u6027\u5BF9\u5E94\u503C\u7684\u7C7B\u578B\u4E3A <code>Object</code>\uFF0C\u5C06\u8BE5\u5C5E\u6027\u503C\u4F20\u7ED9 <code>reactive</code> \u65B9\u6CD5\u8FDB\u884C\u9012\u5F52\u8C03\u7528\uFF1A</p>",6);function q(p,o){return $}const d={render:q};d.__hmrId="/Users/lanbangjue/Documents/GitHub/devazine/src/pages/fe/source-analysis/vue/markdowns/3-3.md";d.__toc=[];const S=e(`<h2>3.2 \u5B8C\u5584\u62E6\u622A\u5668</h2><p><code>Proxy</code> \u6240\u652F\u6301\u7684\u62E6\u622A\u64CD\u4F5C\u5171\u6709\u5341\u6765\u79CD\uFF0C\u76EE\u524D\u6211\u4EEC\u53EA\u5BF9\u5176\u4E2D\u7684 <code>set</code> \u548C <code>get</code> \u505A\u4E86\u62E6\u622A\u3002\u4E3A\u4E86\u5B9E\u73B0\u5B8C\u6574\u7684\u54CD\u5E94\u5F0F\u80FD\u529B\uFF0C\u8FD8\u9700\u589E\u52A0\u5BF9 <code>has</code>\u3001<code>deleteProperty</code>\u3001<code>ownKeys</code> \u7684\u62E6\u622A\u5904\u7406\u3002</p><h3>3.2.1 has \u548C deleteProperty \u62E6\u622A\u5668</h3><p><code>Proxy</code> \u7684 <code>has</code> \u62E6\u622A\u5668\u53EF\u4EE5\u62E6\u622A <code>key in target</code> \u7684\u64CD\u4F5C\uFF0C\u6211\u4EEC\u9700\u8981\u5BF9\u8BE5\u64CD\u4F5C\u505A\u4F9D\u8D56\u6536\u96C6\uFF08\u8C03\u7528 <code>track</code>\uFF09\uFF1B\u800C <code>deleteProperty</code> \u62E6\u622A\u5668\u53EF\u4EE5\u62E6\u622A\u79FB\u9664\u5BF9\u8C61\u5C5E\u6027\u7684 <code>delete</code> \u64CD\u4F5C\uFF0C\u6211\u4EEC\u9700\u8981\u5728\u8BE5\u9636\u6BB5\u89E6\u53D1\u5148\u524D\u6536\u96C6\u5230\u7684\u4F9D\u8D56\u51FD\u6570\uFF08\u8C03\u7528 <code>trigger</code>\uFF09\uFF1A</p><pre class="fr w-50 language-js"><code class="language-js">    <span class="token comment">/** \u65B0\u589E deleteProperty \u62E6\u622A\u5904\u7406 **/</span>
    <span class="token function">deleteProperty</span><span class="token punctuation">(</span><span class="token parameter">target<span class="token punctuation">,</span> key</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> hadKey <span class="token operator">=</span> <span class="token function">hasOwn</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> key<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">const</span> res <span class="token operator">=</span> Reflect<span class="token punctuation">.</span><span class="token function">deleteProperty</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> key<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>res <span class="token operator">&amp;&amp;</span> hadKey<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token function">trigger</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> key<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// \u8C03\u7528\u4F9D\u8D56\uFF08\u6536\u96C6\u5230\u7684\u526F\u4F5C\u7528\u51FD\u6570\uFF09</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> res
    <span class="token punctuation">}</span>
</code></pre><pre class="language-js"><code class="language-javascript">    <span class="token comment">/** \u65B0\u589E has \u62E6\u622A\u5904\u7406 **/</span>
    <span class="token function">has</span><span class="token punctuation">(</span><span class="token parameter">target<span class="token punctuation">,</span> key</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> res <span class="token operator">=</span> Reflect<span class="token punctuation">.</span><span class="token function">has</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> key<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// \u4F9D\u8D56\u6536\u96C6</span>
        <span class="token function">track</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> key<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> res<span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
</code></pre><p>\xA0</p><p>\u4E24\u4E2A\u65B0\u589E\u62E6\u622A\u5668\u7684\u5E94\u7528\u793A\u4F8B\uFF1A</p>`,8);function C(p,o){return S}const g={render:C};g.__hmrId="/Users/lanbangjue/Documents/GitHub/devazine/src/pages/fe/source-analysis/vue/markdowns/3-4.md";g.__toc=[];const z=e(`<h3>3.2.2 ownKeys \u62E6\u622A\u5668</h3><div class="fr w-30 tip"><p>\u5177\u4F53\u6765\u8BF4\uFF0C<code>ownKeys</code> \u4F1A\u62E6\u622A\u5982\u4E0B\u64CD\u4F5C\uFF1A</p><ul><li><code>Object.getOwnPropertyNames()</code>\uFF1B</li><li><code>Object.getOwnPropertySymbols()</code>\uFF1B</li><li><code>Object.keys()</code>\uFF1B</li><li><code>for...in</code> \u5FAA\u73AF\u3002</li></ul></div><p><code>Proxy</code> \u7684 <code>ownKeys</code> \u65B9\u6CD5\u4F1A\u62E6\u622A\u5BF9\u8C61\u81EA\u8EAB\u5C5E\u6027\u7684\u8BFB\u53D6\u64CD\u4F5C\uFF0C\u56E0\u6B64\u548C <code>get</code> \u65B9\u6CD5\u7C7B\u4F3C\uFF0C\u6211\u4EEC\u9700\u8981\u5728\u8BE5\u9636\u6BB5\u5BF9\u4F9D\u8D56\u8FDB\u884C\u6536\u96C6\uFF08\u8C03\u7528 <code>track</code>\uFF09\u3002</p><p>\u4F46\u8FD9\u91CC\u5B58\u5728\u4E00\u4E2A\u95EE\u9898 \u2014\u2014 <code>ownKeys</code> \u65B9\u6CD5\u53EA\u63A5\u6536\u76EE\u6807\u5BF9\u8C61\u53C2\u6570\uFF0C\u4E0D\u540C\u4E8E\u5176\u5B83\u62E6\u622A\u5668\u8FD8\u6709\u5BF9\u8C61\u952E\u540D\u4F5C\u4E3A\u7B2C\u4E8C\u4E2A\u53C2\u6570\u3002\u8FD9\u662F\u56E0\u4E3A <code>ownKeys</code> \u6240\u62E6\u622A\u7684\u64CD\u4F5C\uFF0C\u90FD\u662F\u904D\u5386\u5BF9\u8C61\u5C5E\u6027\u7684\u65B9\u6CD5\uFF08\u4F8B\u5982 <code>Object.keys()</code>\uFF09\uFF0C\u5373\u76F4\u63A5\u8BBF\u95EE\u4E86\u5168\u90E8\u53EF\u679A\u4E3E\u7684\u5BF9\u8C61\u952E\u540D\uFF0C\u800C\u975E\u5355\u4E00\u7684\u952E\u540D\u3002<br>\u7136\u800C\u5728\u5BF9\u4F9D\u8D56\u8FDB\u884C\u6536\u96C6\u65F6\uFF0C\u5374\u9700\u8981\u6709\u4E00\u4E2A\u51ED\u8BC1\uFF08\u4F8B\u5982\u5BF9\u8C61\u952E\u540D\uFF09\u6765\u5C06\u526F\u4F5C\u7528\u51FD\u6570\u5B58\u5165 <code>depsMap</code> \u5BB9\u5668\u624D\u884C\u3002</p><p>\u6B64\u95EE\u9898\u7684\u89E3\u51B3\u65B9\u6CD5\u4E5F\u5F88\u7B80\u5355 \u2014\u2014 \u53EF\u4EE5\u901A\u8FC7 <code>Symbol</code> \u65B9\u6CD5\u751F\u6210\u4E00\u4E2A\u552F\u4E00\u503C\uFF0C\u6765\u4F5C\u4E3A <code>ownKeys</code> \u62E6\u622A\u9636\u6BB5\u6536\u96C6\u4F9D\u8D56\u3001\u5B58\u5165 <code>depsMap</code> \u7684\u51ED\u8BC1\uFF1A</p><div class="fr w-50"><p>\u{1F4A1} \u524D\u9762\u63D0\u5230\u4E86\uFF0C<code>ownKeys</code> \u6240\u62E6\u622A\u7684\u64CD\u4F5C\uFF0C\u4F1A\u6084\u6084\u8BBF\u95EE\u5BF9\u8C61\u5168\u90E8\u7684\u53EF\u679A\u4E3E\u5C5E\u6027\uFF0C\u4F46\u5B83\u5E76\u4E0D\u4F1A\u89E6\u53D1 <code>get</code> \u62E6\u622A\u5668\u7684\u6267\u884C\u3002\u8FD9\u610F\u5473\u7740\u6BCF\u4E2A\u5C5E\u6027\u5355\u62CE\u51FA\u6765\uFF0C\u5728 <code>depsMap</code> \u4E2D\u662F\u6CA1\u6709\u5B58\u50A8\u4EFB\u4F55\u8BE5\u5C5E\u6027\u5BF9\u5E94\u7684\u4F9D\u8D56\u7684\u3002<br>\u8FD9\u4F1A\u5BFC\u81F4\u7528\u6237\u4FEE\u6539\u5BF9\u8C61\u5C5E\u6027\u65F6\uFF0C<code>ownKeys</code> \u9636\u6BB5\u6240\u6536\u96C6\u7684\u4F9D\u8D56\u65E0\u6CD5\u88AB\u89E6\u53D1\u3002</p><p>\u5BF9\u6B64 Vue \u7684\u89E3\u51B3\u65B9\u6848\u662F\uFF0C\u5728 <code>trigger</code> \u65B9\u6CD5\u4E2D\uFF0C\u5224\u65AD\u5F53\u524D\u7684\u64CD\u4F5C\u662F\u5426<strong>\u6DFB\u52A0\u5C5E\u6027</strong>\u6216<strong>\u5220\u9664\u5C5E\u6027</strong>\u7684\u64CD\u4F5C\uFF0C\u82E5\u662F\u5219\u63D0\u53D6\u5728 <code>ownKeys</code> \u9636\u6BB5\u6240\u6536\u96C6\u5230\u7684\u4F9D\u8D56\u51FD\u6570\uFF0C\u538B\u5165\u5F53\u524D\u9636\u6BB5\u7684\u526F\u4F5C\u7528\u51FD\u6570\u6808\u4E2D\u53BB\u4E00\u5E76\u89E6\u53D1\u3002</p></div><pre class="language-js"><code class="language-javascript"><span class="token keyword">const</span> <span class="token constant">ITERATE_KEY</span> <span class="token operator">=</span> <span class="token function">Symbol</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> baseHandlers <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token comment">// ...</span>
  <span class="token function">ownKeys</span><span class="token punctuation">(</span><span class="token parameter">target</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">track</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> <span class="token constant">ITERATE_KEY</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// \u7EDF\u4E00\u4F7F\u7528\u8BE5 Symbol \u7B26\u53F7\u4F5C\u4E3A\u51ED\u8BC1</span>
      <span class="token keyword">return</span> Reflect<span class="token punctuation">.</span><span class="token function">ownKeys</span><span class="token punctuation">(</span>target<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><p>\u8FDB\u4E00\u6B65\u5B8C\u5584 <code>trigger</code> \u51FD\u6570\uFF1A</p><div class="fr w-50"><p>\u8C03\u7528 <code>trigger</code> \u7684\u5730\u65B9\u9700\u8981\u4F20\u5165\u65B0\u589E\u7684 <code>type</code> \u53C2\u6570\uFF1A</p><pre class="language-js"><code class="language-javascript"><span class="token keyword">const</span> baseHandlers <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token comment">// ...</span>
    <span class="token function">set</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> key<span class="token punctuation">,</span> value<span class="token punctuation">,</span> receiver<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u5224\u65AD\u5F53\u524D\u64CD\u4F5C\u5C5E\u4E8E\u201C\u65B0\u589E\u201D\u8FD8\u662F\u201C\u4FEE\u6539\u201D</span>
        <span class="token keyword">const</span> hadKey <span class="token operator">=</span> <span class="token function">isArray</span><span class="token punctuation">(</span>target<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token function">isIntegerKey</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span>
            <span class="token operator">?</span> <span class="token function">Number</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span> <span class="token operator">&lt;</span> target<span class="token punctuation">.</span>length
            <span class="token operator">:</span> <span class="token function">hasOwn</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> key<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">const</span> res <span class="token operator">=</span> Reflect<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> key<span class="token punctuation">,</span> value<span class="token punctuation">,</span> receiver<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">trigger</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> key<span class="token punctuation">,</span> hadKey <span class="token operator">?</span> <span class="token string">&#39;set&#39;</span> <span class="token operator">:</span> <span class="token string">&#39;add&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// \u65B0\u589E\u64CD\u4F5C\u7C7B\u578B\u53C2\u6570</span>
        <span class="token keyword">return</span> res<span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token function">deleteProperty</span><span class="token punctuation">(</span><span class="token parameter">target<span class="token punctuation">,</span> key</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> hadKey <span class="token operator">=</span> <span class="token function">hasOwn</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> key<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">const</span> res <span class="token operator">=</span> Reflect<span class="token punctuation">.</span><span class="token function">deleteProperty</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> key<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>res <span class="token operator">&amp;&amp;</span> hadKey<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token function">trigger</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> key<span class="token punctuation">,</span> <span class="token string">&#39;delete&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// \u4F20\u5165 &#39;delete&#39;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> res
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><p>\u5176\u4E2D\u5DE5\u5177\u65B9\u6CD5 <code>isIntegerKey</code> \u7684\u5B9E\u73B0\uFF1A</p><pre class="language-js"><code class="language-javascript"><span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">isIntegerKey</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">key</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span>
    <span class="token function">isString</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span>
    key <span class="token operator">!==</span> <span class="token string">&#39;NaN&#39;</span> <span class="token operator">&amp;&amp;</span>
    key<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">!==</span> <span class="token string">&#39;-&#39;</span> <span class="token operator">&amp;&amp;</span>
    <span class="token string">&#39;&#39;</span> <span class="token operator">+</span> <span class="token function">parseInt</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span> <span class="token operator">===</span> key
</code></pre></div><pre class="language-js"><code class="language-javascript"><span class="token keyword">const</span> <span class="token function-variable function">trigger</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">target<span class="token punctuation">,</span> key<span class="token punctuation">,</span> type</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>  <span class="token comment">// \u65B0\u589E type \u53C2\u6570</span>
    <span class="token keyword">const</span> depsMap <span class="token operator">=</span> targetMap<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>target<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">// deps \u7528\u4E8E\u5B58\u653E\u4ECE depsMap \u53D6\u51FA\u7684\u4F9D\u8D56\u51FD\u6570</span>
    <span class="token keyword">let</span> deps <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>  

    <span class="token comment">// \u53EA\u6709 SET / ADD / DELETE \u64CD\u4F5C\u624D\u5B58\u5728 key</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>key <span class="token operator">!==</span> <span class="token keyword">void</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        deps<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>depsMap<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// \u53D6\u51FA ownKeys \u62E6\u622A\u9636\u6BB5\u6536\u96C6\u7684\u4F9D\u8D56</span>
    <span class="token keyword">switch</span> <span class="token punctuation">(</span>type<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">case</span> <span class="token string">&#39;add&#39;</span><span class="token operator">:</span>
        <span class="token keyword">case</span> <span class="token string">&#39;delete&#39;</span><span class="token operator">:</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">isArray</span><span class="token punctuation">(</span>target<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                deps<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>depsMap<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token constant">ITERATE_KEY</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">break</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    
    <span class="token keyword">let</span> viewEffects <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">const</span> dep <span class="token keyword">of</span> deps<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>dep<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            viewEffects<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token operator">...</span>dep<span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    viewEffects <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span>viewEffects<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// \u53BB\u91CD</span>

    viewEffects<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">effectFn</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        effectFn <span class="token operator">&amp;&amp;</span> <span class="token function">effectFn</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><p>\u4E00\u4E2A\u5B8C\u6574\u7684\u5E94\u7528\u793A\u4F8B\uFF1A</p>`,11);function H(p,o){return z}const y={render:H};y.__hmrId="/Users/lanbangjue/Documents/GitHub/devazine/src/pages/fe/source-analysis/vue/markdowns/3-5.md";y.__toc=[];const Y=s("h2",null,"3.3 \u5B8C\u5584\u6570\u7EC4\u80FD\u529B",-1),G=s("h3",null,"3.3.1 trigger \u90E8\u5206\u7684\u5B8C\u5584",-1),N=s("p",null,[t("\u4E0A\u8FF0\u7684\u5E94\u7528\u793A\u4F8B\u5B58\u5728\u4E00\u4E2A\u95EE\u9898 \u2014\u2014 \u5982\u679C\u6211\u4EEC\u5C06\u88AB\u4EE3\u7406\u7684\u5BF9\u8C61\u66F4\u6362\u4E3A\u6570\u7EC4\uFF0C\u518D\u4E3A\u6570\u7EC4\u589E/\u5220\u5143\u7D20\u65F6\uFF0C\u65E0\u6CD5\u89E6\u53D1 "),s("code",null,"ownKeys"),t(" \u9636\u6BB5\u6536\u96C6\u5230\u7684\u4F9D\u8D56\u51FD\u6570\uFF1A")],-1);function U(p,o){return u(),l(k,null,[Y,G,N],64)}const m={render:U};m.__hmrId="/Users/lanbangjue/Documents/GitHub/devazine/src/pages/fe/source-analysis/vue/markdowns/3-6.md";m.__toc=[];const D=e(`<p>\u89E3\u51B3\u4E0A\u65B9\u7684\u95EE\u9898\u633A\u7B80\u5355\uFF0C\u5728 <code>trigger</code> \u65B9\u6CD5\u4E2D\u65B0\u589E\u5904\u7406\uFF0C\u5BF9\u4E8E<strong>\u6DFB\u52A0</strong>\u7C7B\u578B\u7684\u64CD\u4F5C\uFF0C\u5982\u679C\u4F20\u5165\u7684\u5C5E\u6027\u4E3A\u6570\u7EC4\u7D22\u5F15\uFF0C\u5219\u53D6\u51FA <code>ownKeys</code> \u9636\u6BB5\u6536\u96C6\u7684\u4F9D\u8D56\u3002<br>\u5177\u4F53\u8C03\u6574\u5982\u4E0B\uFF1A</p><blockquote class="fr w-40"><p>\u6309\u7167\u5DE6\u4FA7\u7684\u6539\u52A8\u4FEE\u6539\u540E\uFF0C\u4E0A\u65B9\u7684\u95EE\u9898\u793A\u4F8B\u5C31\u80FD\u6309\u9884\u671F\u6B63\u5E38\u8FD0\u4F5C\u4E86\uFF08<code>div</code> \u4F1A\u5728\u4E24\u79D2\u540E\u663E\u793A <code>abcd</code>\uFF09\u3002\u4F60\u53EF\u4EE5<a href="https://codepen.io/vajoy/pen/yLvNLbd">\u70B9\u51FB\u8FD9\u91CC</a>\u8FDB\u884C\u5728\u7EBF\u8C03\u8BD5\u3002</p></blockquote><pre class="language-js"><code class="language-javascript"><span class="token keyword">const</span> <span class="token function-variable function">trigger</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">target<span class="token punctuation">,</span> key<span class="token punctuation">,</span> type</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span> 
    <span class="token comment">// ...</span>
    <span class="token keyword">switch</span> <span class="token punctuation">(</span>type<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">case</span> <span class="token string">&#39;add&#39;</span><span class="token operator">:</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">isArray</span><span class="token punctuation">(</span>target<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                deps<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>depsMap<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token constant">ITERATE_KEY</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isIntegerKey</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token comment">// \u82E5\u6570\u7EC4\u88AB\u4FEE\u6539\u7684\u5C5E\u6027\u4E3A\u7D22\u5F15\u5B57\u7B26\u4E32</span>
                deps<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>depsMap<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token constant">ITERATE_KEY</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment">// \u4E5F\u53D6\u51FA ownKeys \u9636\u6BB5\u6536\u96C6\u7684\u4F9D\u8D56</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">break</span><span class="token punctuation">;</span>
        <span class="token comment">// ...</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// ...</span>
<span class="token punctuation">}</span>
</code></pre><p>\u5BF9\u4E8E\u6570\u7EC4\u800C\u8A00\uFF0C\u4F7F\u7528 <code>length</code> \u6765\u66FF\u4EE3 <code>ITERATE_KEY</code>\uFF0C\u662F\u4E2A\u66F4\u597D\u7684\u9009\u62E9\u3002<br>\u8FD9\u662F\u56E0\u4E3A <code>ownKeys</code> \u62E6\u622A\u9636\u6BB5\u6240\u6536\u96C6\u7684\u4F9D\u8D56\uFF0C\u9664\u4E86\u9700\u8981\u8F90\u5C04\u5230\u6570\u7EC4\u7684\u6BCF\u4E00\u4E2A\u5143\u7D20\uFF0C\u4E5F\u9700\u8981\u8F90\u5C04\u5230 <code>length</code>\uFF08\u5373 <code>length</code> \u7684\u53D8\u66F4\u4E5F\u9700\u8981\u89E6\u53D1 <code>ownKeys</code> \u7684\u526F\u4F5C\u7528\u51FD\u6570\uFF09\u3002<br>\u5982\u679C\u76F4\u63A5\u4F7F\u7528 <code>length</code>\uFF0C\u6765\u4F5C\u4E3A\u628A\u4F9D\u8D56\u5B58\u5165 <code>depsMap</code> \u7684\u51ED\u8BC1\uFF0C\u4F1A\u66F4\u7701\u4E8B\uFF1A</p><div class="fr w-50"><p>\u53E6\u5916\u6211\u4EEC\u8FD8\u9700\u8003\u8651\u6570\u7EC4\u7684 <code>length</code> \u5C5E\u6027\u88AB\u5916\u90E8\u76F4\u63A5\u4FEE\u6539\u4E86\u7684\u573A\u666F\uFF0C\u4F8B\u5982 <code>arr.length = 2</code>\u3002</p><p>\u8FD9\u79CD\u60C5\u51B5\u4E0B\uFF0C\u4E00\u65B9\u9762\u9700\u8981\u83B7\u53D6\u4EE5 <code>length</code> \u4E3A\u51ED\u8BC1\u7684\u4F9D\u8D56\uFF0C\u4E00\u65B9\u9762\u7531\u4E8E\u5927\u4E8E\u7B49\u4E8E <code>length</code> \u7684\u7D22\u5F15\u503C\u6240\u5BF9\u5E94\u7684\u6570\u7EC4\u5143\u7D20\u88AB\u79FB\u9664\u4E86\uFF0C\u4E5F\u9700\u8981\u83B7\u53D6\u8FD9\u4E9B\u88AB\u79FB\u9664\u5143\u7D20\u7684\u4F9D\u8D56\uFF1A</p><pre class="language-js"><code class="language-javascript"><span class="token keyword">const</span> <span class="token function-variable function">trigger</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">target<span class="token punctuation">,</span> key<span class="token punctuation">,</span> type<span class="token punctuation">,</span> newValue</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>  <span class="token comment">// \u65B0\u589E newValue \u53C2\u6570</span>
    <span class="token comment">// ...</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>key <span class="token operator">===</span> <span class="token string">&#39;length&#39;</span> <span class="token operator">&amp;&amp;</span> <span class="token function">isArray</span><span class="token punctuation">(</span>target<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u6CE8\u610F Map \u7684 forEach \u53C2\u6570\u4E3A (MapValue, MapKey)</span>
        depsMap<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">dep<span class="token punctuation">,</span> key</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            <span class="token comment">// newValue \u5728\u8FD9\u91CC\u4E3A\u7528\u6237\u8D4B\u4E88 length \u7684\u65B0\u503C</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>key <span class="token operator">===</span> <span class="token string">&#39;length&#39;</span> <span class="token operator">||</span> key <span class="token operator">&gt;=</span> newValue<span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token comment">// \u5F53\u542B\u6709\u4EE5 length \u4E3A\u51ED\u8BC1\u7684\u4F9D\u8D56\uFF0C</span>
                <span class="token comment">// \u6216\u4EE5\u88AB\u79FB\u9664\u5143\u7D20\u7684\u7D22\u5F15\u503C\u4E3A\u51ED\u8BC1\u7684\u4F9D\u8D56\u65F6\uFF0C\u53D6\u51FA\u8BE5\u4F9D\u8D56</span>
                deps<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>dep<span class="token punctuation">)</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// ...</span>
<span class="token punctuation">}</span>
</code></pre></div><pre class="language-js"><code class="language-javascript"><span class="token keyword">const</span> baseHandlers <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token function">ownKeys</span><span class="token punctuation">(</span><span class="token parameter">target</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u6570\u7EC4\u6539\u7528 length \u4E3A\u51ED\u8BC1</span>
        <span class="token keyword">const</span> key <span class="token operator">=</span> <span class="token function">isArray</span><span class="token punctuation">(</span>target<span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token string">&#39;length&#39;</span> <span class="token operator">:</span> <span class="token constant">ITERATE_KEY</span><span class="token punctuation">;</span>
        <span class="token function">track</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> key<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span> Reflect<span class="token punctuation">.</span><span class="token function">ownKeys</span><span class="token punctuation">(</span>target<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token comment">// ...</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> <span class="token function-variable function">trigger</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">target<span class="token punctuation">,</span> key<span class="token punctuation">,</span> type</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span> 
    <span class="token comment">// ...</span>
    <span class="token keyword">switch</span> <span class="token punctuation">(</span>type<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">case</span> <span class="token string">&#39;add&#39;</span><span class="token operator">:</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">isArray</span><span class="token punctuation">(</span>target<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                deps<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>depsMap<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token constant">ITERATE_KEY</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isIntegerKey</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                deps<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>depsMap<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;length&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment">// \u66F4\u6362\u51ED\u8BC1\u4E3A length</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">break</span><span class="token punctuation">;</span>
        <span class="token comment">// ...</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// ...</span>
<span class="token punctuation">}</span>
</code></pre><p>\u5B8C\u6574\u7684\u5E94\u7528\u793A\u4F8B\u5982\u4E0B\uFF1A</p>`,7);function W(p,o){return D}const f={render:W};f.__hmrId="/Users/lanbangjue/Documents/GitHub/devazine/src/pages/fe/source-analysis/vue/markdowns/3-7.md";f.__toc=[];const F=e(`<h3>3.3.2 \u4FEE\u590D\u9012\u5F52\u8FFD\u8E2A\u95EE\u9898</h3><p>\u76EE\u524D\u6211\u4EEC\u57FA\u672C\u5B8C\u5584\u4E86 <code>reactive</code> \u5BF9\u6570\u7EC4\u7684\u80FD\u529B\uFF0C\u4F46\u8FD8\u5B58\u5728\u4E00\u4E2A\u5BB9\u6613\u88AB\u5FFD\u7565\u7684 bug \u2014\u2014 \u5982\u679C\u5728\u526F\u4F5C\u7528\u51FD\u6570\u4E2D\u8C03\u7528\u4E86 <code>push</code> \u7B49\u65B9\u6CD5\uFF0C\u4F1A\u5BFC\u81F4\u8C03\u7528\u6808\u6EA2\u51FA\u3002</p><p>\u8FD9\u662F\u56E0\u4E3A <code>push</code> \u65B9\u6CD5\u5728\u4FEE\u6539\u6570\u7EC4\u524D\uFF0C\u4F1A\u5148\u9690\u5F0F\u5730\u8BBF\u95EE <code>length</code> \u5C5E\u6027\uFF0C\u5BFC\u81F4 <code>length</code> \u88AB\u8FFD\u8E2A\uFF0C\u63A5\u7740\u5C06\u65B0\u5143\u7D20\u538B\u5165\u6570\u7EC4\u65F6\uFF0C\u53C8\u4F1A\u89E6\u53D1\u65B0\u589E\u5143\u7D20\u7D22\u5F15\u7684 <code>set</code> \u62E6\u622A\uFF0C \u8FDB\u800C\u89E6\u53D1 <code>length</code> \u6536\u96C6\u5230\u7684\u526F\u4F5C\u7528\u51FD\u6570\uFF0C\u526F\u4F5C\u7528\u51FD\u6570\u4E2D\u53C8\u8C03\u7528\u4E86 <code>push</code>\uFF0C\u5BFC\u81F4\u7A0B\u5E8F\u8FDB\u5165\u4E86\u6B7B\u5FAA\u73AF\u3002</p><p><img src="https://raw.githubusercontent.com/devazine2022/assets/main/vue-pic-1.jpg" alt class="fr w-50"></p><pre class="language-js"><code class="language-javascript">  <span class="token keyword">import</span> <span class="token punctuation">{</span> setViewEffect<span class="token punctuation">,</span> reactive <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;./reactive.js&#39;</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> arr <span class="token operator">=</span> <span class="token function">reactive</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;b&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;c&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token function">setViewEffect</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token comment">// Uncaught RangeError: Maximum call stack size exceeded</span>
    arr<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token string">&#39;d&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><p>\u4F1A\u89E6\u53D1\u540C\u6837\u95EE\u9898\u7684\u8FD8\u6709 <code>pop</code>\u3001<code>shift</code>\u3001<code>unshift</code> \u548C <code>splice</code> \u65B9\u6CD5\uFF0C\u4E8B\u5B9E\u4E0A\u8FD9\u4E9B\u65B9\u6CD5\u90FD\u662F\u66F4\u6539\u6570\u7EC4\u7684\u65B9\u6CD5\uFF0C\u5B83\u4EEC\u7684\u76EE\u7684\u5E76\u4E0D\u662F\u4E3A\u4E86\u83B7\u53D6\u5C5E\u6027\u3002\u6545\u5F53\u5916\u90E8\u8C03\u7528\u4E86\u8FD9\u4E9B\u65B9\u6CD5\u65F6\uFF0C\u662F\u4E0D\u5E94\u8BE5\u505A\u4EFB\u4F55\u4F9D\u8D56\u6536\u96C6\u7684\u3002 <br>\u6211\u4EEC\u9700\u8981\u5728 <code>get</code> \u62E6\u622A\u5668\u4E2D\uFF0C\u5BF9\u8FD9\u4E9B\u65B9\u6CD5\u505A\u5355\u72EC\u7684\u5904\u7406\uFF0C\u8BA9\u5B83\u4EEC\u7ED5\u8FC7 <code>track</code>\u3002</p><p>\u9996\u5148\u8BA9\u8FD9\u4E9B\u65B9\u6CD5\u5728\u88AB <code>get</code> \u62E6\u622A\u65F6\u76F4\u63A5\u8FD4\u56DE\u7ED3\u679C\uFF0C\u4E0D\u518D\u8C03\u7528 <code>track</code> \u65B9\u6CD5\uFF1A</p>`,7),J=s("blockquote",{class:"fr","w-40":""},[s("p",null,[t("\u{1F4A1} "),s("code",null,"pop"),t("\u3001"),s("code",null,"shift"),t("\u3001"),s("code",null,"unshift"),t(" \u548C "),s("code",null,"splice"),t(" \u7EDF\u79F0\u4E3A\u6570\u7EC4\u7684\u6808\u65B9\u6CD5\uFF0C\u5B83\u4EEC\u5728\u6267\u884C\u65F6\u90FD\u4F1A\u9690\u5F0F\u5730\u53BB\u8BBF\u95EE\u548C\u6539\u53D8\u6570\u7EC4\u7684 "),s("code",null,"length"),t(" \u5C5E\u6027\u3002\u4EE5 "),s("code",null,"push"),t(" \u4E3A\u4F8B\uFF0C\u4F60\u53EF\u4EE5"),s("a",{href:"https://tc39.es/ecma262/multipage/indexed-collections.html#sec-array.prototype.push"},"\u70B9\u51FB\u8FD9\u91CC"),t("\u67E5\u770B\u5176\u6267\u884C\u6D41\u7A0B\u3002")])],-1),B=e(`<pre class="language-js"><code class="language-javascript"><span class="token keyword">const</span> arrayMethods <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;push&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;pop&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;shift&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;unshift&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;splice&#39;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> baseHandlers <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token function">get</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> key<span class="token punctuation">,</span> receiver<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> targetIsArray <span class="token operator">=</span> <span class="token function">isArray</span><span class="token punctuation">(</span>target<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>targetIsArray <span class="token operator">&amp;&amp;</span> arrayMethods<span class="token punctuation">.</span><span class="token function">includes</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment">// \u5C1D\u8BD5\u76F4\u63A5\u8FD4\u56DE\uFF0C\u4E0D\u518D\u8C03\u7528 track \u65B9\u6CD5</span>
            <span class="token keyword">return</span> Reflect<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> key<span class="token punctuation">,</span> receiver<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">const</span> res <span class="token operator">=</span> Reflect<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> key<span class="token punctuation">,</span> receiver<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">track</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> key<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// ...</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token comment">// ...</span>
<span class="token punctuation">}</span>
</code></pre><p>\u4F46\u4F60\u4F1A\u53D1\u73B0\uFF0C\u6B64\u4E3E\u4EC5\u4EC5\u662F\u9650\u5236\u4E86\u5BF9\u65B9\u6CD5\u540D\u7684\u8FFD\u8E2A\uFF0C\u5F53\u8FD9\u4E9B\u65B9\u6CD5\u6267\u884C\u65F6\uFF0C\u4F9D\u65E7\u4F1A\u89E6\u53D1\u5BF9 <code>length</code> \u5C5E\u6027\u7684\u8BBF\u95EE\u548C\u8FFD\u8E2A\u3002</p><p>\u6B63\u786E\u7684\u5904\u7406\u662F<strong>\u91CD\u5199\u8FD9\u4E9B\u65B9\u6CD5</strong>\uFF0C\u8BA9\u5B83\u4EEC\u5728\u6267\u884C\u7684\u8FC7\u7A0B\u4E2D\u6682\u505C <code>track</code> \u7684\u80FD\u529B\uFF1A</p><div class="fr w-45"><p>\u5176\u4E2D\u7684 <code>pauseTracking</code> \u548C <code>resetTracking</code> \u5C06\u5206\u522B\u7528\u4E8E\u6682\u505C/\u6062\u590D <code>track</code> \u7684\u80FD\u529B\uFF0C\u5B83\u4EEC\u5728 Vue \u4E2D\u7684\u5B9E\u73B0\u8F83\u7B80\u5355\uFF1A</p><pre class="language-js"><code class="language-javascript"><span class="token comment">// \u6807\u5FD7\u53D8\u91CF\uFF0C\u51B3\u5B9A track \u65B9\u6CD5\u662F\u5426\u5E94\u5F53\u8FFD\u8E2A</span>
<span class="token keyword">export</span> <span class="token keyword">let</span> shouldTrack <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> trackStack <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">pauseTracking</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    trackStack<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>shouldTrack<span class="token punctuation">)</span>
    shouldTrack <span class="token operator">=</span> <span class="token boolean">false</span>
<span class="token punctuation">}</span>

<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">resetTracking</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> last <span class="token operator">=</span> trackStack<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    shouldTrack <span class="token operator">=</span> last <span class="token operator">===</span> <span class="token keyword">undefined</span> <span class="token operator">?</span> <span class="token boolean">true</span> <span class="token operator">:</span> last
<span class="token punctuation">}</span>

<span class="token keyword">const</span> <span class="token function-variable function">track</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">target<span class="token punctuation">,</span> key</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u5728 track \u4E2D\u5224\u65AD\u662F\u5426\u5E94\u5F53\u8FFD\u8E2A</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>shouldTrack<span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span>
    <span class="token comment">// ...</span>
<span class="token punctuation">}</span>
</code></pre><p>\u4E0A\u65B9\u4EE3\u7801\u5B9A\u4E49\u4E86\u4E00\u4E2A\u7EDF\u4E00\u5224\u65AD\u662F\u5426\u5E94\u5F53\u6267\u884C\u8FFD\u8E2A\u7684\u6807\u5FD7\u53D8\u91CF <code>shouldTrack</code>\uFF0C<code>track</code> \u65B9\u6CD5\u5728\u6267\u884C\u65F6\u4F1A\u5148\u5224\u65AD\u8BE5\u53D8\u91CF\uFF0C\u5982\u679C\u4E3A <code>true</code> \u624D\u6267\u884C\u8FFD\u8E2A\u3002<br>\u53E6\u5916\u8FD9\u91CC\u7684 <code>trackStack</code> \u7528\u4E8E\u5B58\u53D6 <code>shouldTrack</code> \u7684\u72B6\u6001\uFF0C\u65B9\u4FBF\u5728\u672A\u6765\u66F4\u590D\u6742\u7684\u573A\u666F\u4E0B\u8C03\u5EA6 <code>track</code> \u7684\u6267\u884C\u3002</p></div><pre class="language-js"><code class="language-javascript"><span class="token keyword">function</span> <span class="token function">createArrayInstrumentations</span><span class="token punctuation">(</span><span class="token parameter">target</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> instrumentations <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token comment">// \u91CD\u5199\u539F\u751F\u65B9\u6CD5\uFF0C\u8BA9\u5B83\u4EEC\u5728\u6267\u884C\u65F6\uFF0C\u6682\u505C\u8FFD\u8E2A</span>
    <span class="token punctuation">[</span><span class="token string">&#39;push&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;pop&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;shift&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;unshift&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;splice&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">key</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        instrumentations<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token operator">...</span>args</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token function">pauseTracking</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// \u6682\u505C track</span>
            <span class="token keyword">const</span> res <span class="token operator">=</span> target<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token function">resetTracking</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// \u6062\u590D track</span>
            <span class="token keyword">return</span> res
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> instrumentations  <span class="token comment">// { push(...args){...}, pop(...args){...}, ... }</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> baseHandlers <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token function">get</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> key<span class="token punctuation">,</span> receiver<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> targetIsArray <span class="token operator">=</span> <span class="token function">isArray</span><span class="token punctuation">(</span>target<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">const</span> arrayInstrumentations <span class="token operator">=</span> <span class="token function">createArrayInstrumentations</span><span class="token punctuation">(</span>target<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>targetIsArray <span class="token operator">&amp;&amp;</span> <span class="token function">hasOwn</span><span class="token punctuation">(</span>arrayInstrumentations<span class="token punctuation">,</span> key<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> Reflect<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>arrayInstrumentations<span class="token punctuation">,</span> key<span class="token punctuation">,</span> receiver<span class="token punctuation">)</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">const</span> res <span class="token operator">=</span> Reflect<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> key<span class="token punctuation">,</span> receiver<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">track</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> key<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token comment">// ...</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token comment">// ...</span>
<span class="token punctuation">}</span>
</code></pre><p>\u91CD\u5199\u540E\u5C31\u80FD\u5728\u526F\u4F5C\u7528\u51FD\u6570\u4E2D\u6B63\u5E38\u8C03\u7528 <code>push</code> \u7B49\u65B9\u6CD5\u4E86\uFF08\u89C1\u4E0B\u65B9\u5DE6\u4FA7\u4EE3\u7801\uFF09\u3002<br>\u4F46\u4F1A\u53D1\u73B0\u901A\u8FC7 <code>push</code> \u63D2\u5165\u7684\u65B0\u5143\u7D20\uFF0C\u5982\u679C\u5BF9\u5176\u8FDB\u884C\u4FEE\u6539\uFF0C\u526F\u4F5C\u7528\u51FD\u6570\u4E0D\u4F1A\u6267\u884C\uFF08\u89C1\u4E0B\u65B9\u53F3\u4FA7\u4EE3\u7801\uFF09\u3002</p><pre class="fr w-50 language-js"><code class="language-js">  <span class="token keyword">let</span> arr <span class="token operator">=</span> <span class="token function">reactive</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;b&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;c&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">setViewEffect</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    div<span class="token punctuation">.</span>innerText <span class="token operator">=</span> arr<span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">p<span class="token punctuation">,</span> c</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span>p <span class="token operator">+</span> c<span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  arr<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token string">&#39;d&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  arr<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>  <span class="token comment">// \u4E0D\u4F1A\u6267\u884C\u526F\u4F5C\u7528\u51FD\u6570</span>
</code></pre><pre class="language-js"><code class="language-javascript">  <span class="token keyword">let</span> arr <span class="token operator">=</span> <span class="token function">reactive</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;b&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;c&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token function">setViewEffect</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u4E0D\u518D\u9677\u5165\u6B7B\u5FAA\u73AF</span>
    arr<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token string">&#39;d&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  
    div<span class="token punctuation">.</span>innerText <span class="token operator">=</span> arr<span class="token punctuation">.</span><span class="token function">reduce</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">p<span class="token punctuation">,</span> c</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span>p <span class="token operator">+</span> c<span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><p>\u8FD9\u662F\u56E0\u4E3A <code>push</code> \u65B9\u6CD5\u5728\u6267\u884C\u65F6\u6682\u505C\u4E86\u4F9D\u8D56\u6536\u96C6\uFF0C\u5728 <code>set</code> \u62E6\u622A\u9636\u6BB5\u6267\u884C\u526F\u4F5C\u7528\u51FD\u6570\u65F6\u4F1A\u7ED5\u8FC7 <code>track</code> \u7684\u6267\u884C\uFF0C\u5BFC\u81F4\u65B0\u5143\u7D20\u7684\u7D22\u5F15\u65E0\u6CD5\u88AB\u8FFD\u8E2A\u3002</p><p>\u5B9E\u8D28\u4E0A\u6211\u4EEC\u53EA\u5E0C\u671B\u6570\u7EC4\u7684\u6808\u65B9\u6CD5\u5728\u6267\u884C\u65F6\uFF0C\u5C4F\u853D\u6389\u5BF9\u5176\u81EA\u8EAB\u7684\u8FFD\u8E2A\u5373\u53EF\uFF0C\u90A3\u4E48\u5728\u526F\u4F5C\u7528\u51FD\u6570\u6267\u884C\u524D\u6211\u4EEC\u5E94\u8BE5\u6062\u590D <code>track</code> \u7684\u80FD\u529B\uFF1A</p><pre class="w-40 language-js"><code class="language-js"><span class="token keyword">const</span> <span class="token function-variable function">trigger</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">target<span class="token punctuation">,</span> key<span class="token punctuation">,</span> type<span class="token punctuation">,</span> newValue</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token comment">// ...</span>
    viewEffects<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">effectFn</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        shouldTrack <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>  <span class="token comment">// \u526F\u4F5C\u7528\u6267\u884C\u524D\u8981\u6062\u590D track \u7684\u80FD\u529B</span>
        effectFn <span class="token operator">&amp;&amp;</span> <span class="token function">effectFn</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><h3>3.3.3 toRaw</h3><p>\u7EC6\u5FC3\u7684\u8BFB\u8005\u53EF\u80FD\u4F1A\u53D1\u73B0\uFF0C\u5728 <code>get</code> \u62E6\u622A\u5668\u4E2D\uFF0C\u6BCF\u6B21\u62E6\u622A\u6570\u7EC4\u90FD\u9700\u8981\u4F20\u5165 <code>target</code> \u7ED9 <code>createArrayInstrumentations</code> \u65B9\u6CD5\u6765\u751F\u6210\u4E00\u4E2A <code>arrayInstrumentations</code> \u5BF9\u8C61\u3002\u8FD9\u79CD\u5904\u7406\u65B9\u6CD5\u6027\u80FD\u8F83\u4F4E\uFF0C\u8FD9\u4E48\u5199\u7684\u539F\u56E0\u53EA\u662F\u4E3A\u4E86\u652F\u6301\u52A8\u6001\u4F20\u5165 <code>target</code>\uFF1A</p><pre class="fr w-50 code-highlight-6 language-js"><code class="language-js"><span class="token comment">/** createArrayInstrumentations **/</span>

<span class="token keyword">function</span> <span class="token function">createArrayInstrumentations</span><span class="token punctuation">(</span><span class="token parameter">target</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> instrumentations <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token punctuation">[</span><span class="token string">&#39;push&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;pop&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;shift&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;unshift&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;splice&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">key</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        instrumentations<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token operator">...</span>args</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token function">pauseTracking</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">// target \u4E0D\u80FD\u6362\u6210 this\uFF0C\u5426\u5219\u4F1A\u9677\u5165\u6B7B\u5FAA\u73AF</span>
            <span class="token keyword">const</span> res <span class="token operator">=</span> target<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token function">resetTracking</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> res
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> instrumentations
<span class="token punctuation">}</span>
</code></pre><pre class="code-highlight-5 language-js"><code class="language-js"><span class="token comment">/** get \u62E6\u622A\u5668 **/</span>

<span class="token keyword">const</span> baseHandlers <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token function">get</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> key<span class="token punctuation">,</span> receiver<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">const</span> targetIsArray <span class="token operator">=</span> <span class="token function">isArray</span><span class="token punctuation">(</span>target<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// \u52A8\u6001\u4F20\u5165 target \u53C2\u6570</span>
        <span class="token keyword">const</span> arrayInstrumentations <span class="token operator">=</span> <span class="token function">createArrayInstrumentations</span><span class="token punctuation">(</span>target<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>targetIsArray <span class="token operator">&amp;&amp;</span> <span class="token function">hasOwn</span><span class="token punctuation">(</span>arrayInstrumentations<span class="token punctuation">,</span> key<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> Reflect<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>arrayInstrumentations<span class="token punctuation">,</span> key<span class="token punctuation">,</span> receiver<span class="token punctuation">)</span>
        <span class="token punctuation">}</span>

        <span class="token comment">// ...</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token comment">// ...</span>
<span class="token punctuation">}</span>
</code></pre><p>\u5728 <code>createArrayInstrumentations</code> \u65B9\u6CD5\u4E2D\uFF0C<code>this</code> \u662F <code>target</code> \u88AB <code>Proxy</code> \u4EE3\u7406\u540E\u7684\u54CD\u5E94\u5F0F\u5BF9\u8C61\uFF0C\u5982\u679C\u6211\u4EEC\u5C06 <code>target</code> \u6362\u6210 <code>this</code>\uFF0C\u90A3\u4E48 <code>this[key]</code> \u4E0D\u518D\u662F\u539F\u751F\u7684\u6570\u7EC4\u539F\u578B\u65B9\u6CD5\uFF0C\u800C\u662F\u88AB\u91CD\u5199\u540E\u7684\u65B9\u6CD5\uFF0C\u5176\u6267\u884C\u65F6\u4F1A\u9677\u5165\u81EA\u6211\u9012\u5F52\u8C03\u7528\u7684\u6B7B\u5FAA\u73AF\u3002<br>\u8FD9\u610F\u5473\u7740\u5728 <code>createArrayInstrumentations</code> \u4E2D\u83B7\u53D6\u672A\u88AB\u4EE3\u7406\u7684\u539F\u751F\u5BF9\u8C61\uFF0C\u662F\u5FC5\u8981\u7684\u4E8B\u60C5\u3002</p><p>\u4F46\u6211\u4EEC\u4F9D\u65E7\u53EF\u4EE5\u9009\u62E9\u4E00\u79CD\u53D6\u5DE7\u7684\u65B9\u5F0F\uFF0C\u6765\u5B9E\u73B0<strong>\u4E0D\u4F20\u53C2\u4E5F\u80FD\u83B7\u53D6\u539F\u751F\u7684 <code>target</code></strong> \u7684\u529F\u80FD \u2014\u2014 \u901A\u8FC7 <code>get</code> \u62E6\u622A\u5668\u4E2D\u7684\u5C5E\u6027\u89C4\u5219\u5339\u914D\uFF0C\u4ECE\u54CD\u5E94\u5F0F\u5BF9\u8C61\u81EA\u8EAB\u83B7\u53D6\u3002<br>\u6539\u52A8\u5982\u4E0B\uFF1A</p><div class="fr w-45"><p>\u65B0\u589E\u89C4\u5219\u540E\uFF0C\u53EA\u9700\u8C03\u7528\u54CD\u5E94\u5F0F\u5BF9\u8C61\u7684 <code>__v_raw</code> \u5C5E\u6027\uFF0C\u5373\u53EF\u83B7\u53D6\u5176\u539F\u751F\u5F15\u7528\u3002<br>\u6211\u4EEC\u518D\u5C01\u88C5\u4E00\u4E2A <code>toRaw</code> \u65B9\u6CD5\uFF0C\u65B9\u4FBF\u7EDF\u4E00\u8C03\u7528\uFF1A</p><pre class="language-js"><code class="language-javascript"><span class="token keyword">function</span> <span class="token function">toRaw</span><span class="token punctuation">(</span><span class="token parameter">observed</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> raw <span class="token operator">=</span> observed <span class="token operator">&amp;&amp;</span> observed<span class="token punctuation">[</span><span class="token string">&quot;__v_raw&quot;</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> raw <span class="token operator">?</span> <span class="token function">toRaw</span><span class="token punctuation">(</span>raw<span class="token punctuation">)</span> <span class="token operator">:</span> observed<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><pre class="language-js"><code class="language-javascript"><span class="token comment">/** get \u62E6\u622A\u5668 **/</span>

<span class="token function">get</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> key<span class="token punctuation">,</span> receiver<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u65B0\u589E\u5C5E\u6027\u5339\u914D\u89C4\u5219\u6765\u83B7\u53D6\u539F\u751F\u5F15\u7528</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>key <span class="token operator">===</span> <span class="token string">&quot;__v_raw&quot;</span> <span class="token operator">&amp;&amp;</span> proxyMap<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>target<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> target<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">const</span> targetIsArray <span class="token operator">=</span> <span class="token function">isArray</span><span class="token punctuation">(</span>target<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">// ...</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span>
</code></pre><p>\u5982\u6B64\u4E00\u6765\uFF0C\u6211\u4EEC\u4FBF\u53EF\u8F7B\u677E\u5730\u5C06 <code>createArrayInstrumentations</code> \u65B9\u6CD5\u7684\u8C03\u7528\u79FB\u51FA <code>get</code> \u62E6\u622A\u5668\uFF0C\u907F\u514D\u4E86\u5728 <code>get</code> \u62E6\u622A\u9636\u6BB5\u7684\u91CD\u590D\u521B\u5EFA\uFF1A</p><pre class="fr w-50 language-js"><code class="language-js"><span class="token comment">/** createArrayInstrumentations **/</span>

<span class="token keyword">function</span> <span class="token function">createArrayInstrumentations</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token comment">// \u4E0D\u518D\u9700\u8981\u4F20\u5165 target</span>
    <span class="token keyword">const</span> instrumentations <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token punctuation">[</span><span class="token string">&#39;push&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;pop&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;shift&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;unshift&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;splice&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">key</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        instrumentations<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token operator">...</span>args</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token function">pauseTracking</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment">// \u901A\u8FC7 toRaw \u83B7\u53D6\u539F\u751F\u6570\u7EC4</span>
            <span class="token keyword">const</span> res <span class="token operator">=</span> <span class="token function">toRaw</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token function">resetTracking</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> res
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> instrumentations
<span class="token punctuation">}</span>

<span class="token comment">// \u4ECE get \u62E6\u622A\u5668\u79FB\u5230\u5916\u9762\uFF0C\u53EA\u4F1A\u6267\u884C\u4E00\u6B21</span>
<span class="token keyword">const</span> arrayInstrumentations <span class="token operator">=</span> <span class="token function">createArrayInstrumentations</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><pre class="language-js"><code class="language-javascript"><span class="token comment">/** get \u62E6\u622A\u5668 **/</span>

<span class="token keyword">const</span> baseHandlers <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token function">get</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> key<span class="token punctuation">,</span> receiver<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>key <span class="token operator">===</span> <span class="token string">&quot;__v_raw&quot;</span> <span class="token operator">&amp;&amp;</span> proxyMap<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>target<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> target<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">const</span> targetIsArray <span class="token operator">=</span> <span class="token function">isArray</span><span class="token punctuation">(</span>target<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">// \u6B64\u5904\u4E0D\u518D\u9700\u8981\u8C03\u7528 createArrayInstrumentations \u65B9\u6CD5</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>targetIsArray <span class="token operator">&amp;&amp;</span> <span class="token function">hasOwn</span><span class="token punctuation">(</span>arrayInstrumentations<span class="token punctuation">,</span> key<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">return</span> Reflect<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>arrayInstrumentations<span class="token punctuation">,</span> key<span class="token punctuation">,</span> receiver<span class="token punctuation">)</span>
        <span class="token punctuation">}</span>

        <span class="token comment">// ...</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token comment">// ...</span>
<span class="token punctuation">}</span>
</code></pre><h3>3.3.4 \u68C0\u7D22\u65B9\u6CD5\u5904\u7406</h3><p>\u6709\u65F6\u5019\u6211\u4EEC\u4F1A\u4F7F\u7528\u6570\u7EC4\u7684 <code>includes</code>\u3001<code>indexOf</code>\u3001<code>lastIndexOf</code> \u65B9\u6CD5\uFF0C\u6765\u68C0\u7D22\u6570\u7EC4\u4E2D\u662F\u5426\u5305\u542B\u67D0\u4E9B\u5185\u5BB9\uFF0C\u5F53\u4F20\u5165\u7684\u53C2\u6570\u662F\u4E00\u4E2A\u5BF9\u8C61\uFF0C\u751A\u81F3\u662F\u88AB\u4EE3\u7406\u8FC7\u7684\u54CD\u5E94\u5F0F\u5BF9\u8C61\u65F6\uFF0C\u4F1A\u5BFC\u81F4\u975E\u9884\u671F\u7684\u7ED3\u679C\uFF1A</p>`,24);function L(p,o){return u(),l(k,null,[F,J,B],64)}const w={render:L};w.__hmrId="/Users/lanbangjue/Documents/GitHub/devazine/src/pages/fe/source-analysis/vue/markdowns/3-8.md";w.__toc=[];const Q=e(`<p>\u6211\u4EEC\u53EF\u4EE5\u4F7F\u7528 <code>toRaw</code> \u65B9\u6CD5\uFF0C\u5C06\u8C03\u7528\u6570\u7EC4\u68C0\u7D22\u63A5\u53E3\u7684\u4EE3\u7406\u5BF9\u8C61\uFF0C\u4EE5\u53CA\u4F20\u5165\u7684\u54CD\u5E94\u5F0F\u53C2\u6570\uFF0C\u90FD\u8F6C\u4E3A\u5176\u539F\u751F\u5F15\u7528\uFF0C\u4ECE\u800C\u89E3\u51B3\u6B64\u95EE\u9898\u3002<br>\u6539\u52A8\u5982\u4E0B\uFF1A</p><div class="fr w-45"><p>\u53EF\u4EE5<a href="https://codepen.io/vajoy/pen/JjpYJRo">\u70B9\u51FB\u8FD9\u91CC</a>\u5728\u7EBF\u8C03\u8BD5\u4FEE\u6539\u540E\u7684\u4EE3\u7801\u3002</p><blockquote><p>\u{1F4A1} \u672A\u88AB\u4EE3\u7406\u8FC7\u7684\u539F\u751F\u5BF9\u8C61\uFF0C\u548C\u7ECF <code>Proxy</code> \u4EE3\u7406\u540E\u7684\u54CD\u5E94\u5F0F\u5BF9\u8C61\uFF0C\u4E8C\u8005\u662F\u4E0D\u4E00\u6837\u7684\uFF0C\u5982\u679C\u76F4\u63A5\u4F7F\u7528\u54CD\u5E94\u5F0F\u5BF9\u8C61\uFF0C\u53BB\u8C03\u7528\u539F\u751F\u5BF9\u8C61\u7684\u65B9\u6CD5\uFF0C\u53EF\u80FD\u4F1A\u5BFC\u81F4\u95EE\u9898\u3002\u8FD9\u662F <code>reactive</code> \u54CD\u5E94\u5F0F\u63A5\u53E3\u7684\u91CD\u8981\u77E5\u8BC6\u70B9\u3002</p></blockquote></div><pre class="language-js"><code class="language-javascript"><span class="token keyword">function</span> <span class="token function">createArrayInstrumentations</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> instrumentations <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token comment">// \u91CD\u5199\u6570\u7EC4\u68C0\u7D22\u65B9\u6CD5</span>
    <span class="token punctuation">[</span><span class="token string">&#39;includes&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;indexOf&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;lastIndexOf&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">key</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        instrumentations<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token operator">...</span>args</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">const</span> arr <span class="token operator">=</span> <span class="token function">toRaw</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> l <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>length<span class="token punctuation">;</span> i <span class="token operator">&lt;</span> l<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token function">track</span><span class="token punctuation">(</span>arr<span class="token punctuation">,</span> <span class="token string">&quot;get&quot;</span><span class="token punctuation">,</span> i <span class="token operator">+</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
            <span class="token keyword">const</span> res <span class="token operator">=</span> arr<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token operator">...</span>args<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>res <span class="token operator">===</span> <span class="token operator">-</span><span class="token number">1</span> <span class="token operator">||</span> res <span class="token operator">===</span> <span class="token boolean">false</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                <span class="token comment">// \u5339\u914D\u5931\u8D25\u65F6\uFF0C\u6709\u53EF\u80FD\u662F\u4F20\u5165\u53C2\u6570\u4E5F\u5C5E\u4E8E\u54CD\u5E94\u5F0F\u5BF9\u8C61</span>
                <span class="token comment">// \u5C06\u53C2\u6570\u8F6C\u4E3A\u539F\u751F\u5F15\u7528\uFF0C\u518D\u5339\u914D\u4E00\u6B21</span>
                <span class="token keyword">return</span> arr<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token operator">...</span>args<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>toRaw<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
                <span class="token keyword">return</span> res<span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token punctuation">[</span><span class="token string">&#39;push&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;pop&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;shift&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;unshift&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;splice&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">key</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token comment">// ...</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> instrumentations
<span class="token punctuation">}</span>
</code></pre><h1>\u56DB\u3001\u4EE3\u7801\u4F18\u5316</h1><h2>4.1 \u51CF\u5C11\u5197\u4F59\u7684 trigger \u8C03\u7528</h2><pre class="fr w-35 language-js"><code class="language-js">  <span class="token keyword">const</span> obj <span class="token operator">=</span> <span class="token function">reactive</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">a</span><span class="token operator">:</span> <span class="token number">1</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">setViewEffect</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>obj<span class="token punctuation">.</span>b<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">// \u4F1A\u6253\u5370\u4E09\u4E2A 2</span>
  obj<span class="token punctuation">.</span>b <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span> obj<span class="token punctuation">.</span>b <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span> obj<span class="token punctuation">.</span>b <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>
</code></pre><p>\u5982\u679C\u73B0\u5728\u5C1D\u8BD5\u7ED9\u4E00\u4E2A\u54CD\u5E94\u5F0F\u5BF9\u8C61\u5C5E\u6027\u91CD\u590D\u8D4B\u503C\uFF0C\u4F1A\u53D1\u73B0\u5373\u4F7F\u8D4B\u4E88\u7684\u503C\u90FD\u662F\u76F8\u540C\u7684\uFF0C\u6BCF\u6B21\u8D4B\u503C\u90FD\u4F1A\u89E6\u53D1\u526F\u4F5C\u7528\u51FD\u6570\u7684\u6267\u884C\uFF08\u793A\u4F8B\u89C1\u53F3\u65B9\uFF09\u3002</p><p>\u5982\u679C\u526F\u4F5C\u7528\u51FD\u6570\u8F83\u4E3A\u590D\u6742\uFF0C\u90A3\u4E48\u8FD9\u79CD\u5197\u4F59\u7684\u591A\u6B21\u8C03\u7528\u662F\u5F88\u8017\u6027\u80FD\u7684\u3002<br>\u66F4\u5408\u7406\u7684\u65B9\u5F0F\u662F\u5224\u65AD\u5C5E\u6027\u503C\u662F\u5426\u771F\u7684\u53D8\u52A8\u4E86\uFF08\u5BF9\u6BD4\u8D4B\u503C\u524D\u540E\u7684\u5185\u5BB9\uFF09\uFF0C\u5982\u679C\u786E\u5B9E\u88AB\u6539\u53D8\u4E86\uFF0C\u518D\u8C03\u7528\u526F\u4F5C\u7528\u51FD\u6570\u3002</p><p>\u5BF9\u6B64\uFF0C\u6211\u4EEC\u9700\u8981\u5728 <code>set</code> \u62E6\u622A\u65B9\u6CD5\u4E2D\u65B0\u589E\u5224\u65AD\uFF1A</p><div class="fr w-40"><p>\u5176\u4E2D\u5DE5\u5177\u65B9\u6CD5 <code>hasChanged</code> \u7684\u5B9E\u73B0\u5982\u4E0B\uFF1A</p><pre class="language-js"><code class="language-javascript"><span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">hasChanged</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">value<span class="token punctuation">,</span> oldValue</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span>
    <span class="token operator">!</span>Object<span class="token punctuation">.</span><span class="token function">is</span><span class="token punctuation">(</span>value<span class="token punctuation">,</span> oldValue<span class="token punctuation">)</span>
</code></pre><blockquote><p><code>Object.is</code> \u662F ES6 \u8BED\u6CD5\u7CD6\uFF0C\u53EF\u7528\u6765\u6BD4\u8F83\u4E24\u4E2A\u503C\u662F\u5426\u4E25\u683C\u76F8\u7B49\uFF0C\u4E0E\u4E25\u683C\u6BD4\u8F83\u8FD0\u7B97\u7B26\uFF08<code>===</code>\uFF09\u7684\u884C\u4E3A\u57FA\u672C\u4E00\u81F4\uFF0C\u4F46\u66F4\u7B26\u5408 <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Equality_comparisons_and_sameness#same-value_equality">Same-value equality</a> \u7684\u7406\u5FF5\uFF08\u4F8B\u5982\u4E24\u4E2A <code>NaN</code> \u76F8\u6BD4\u7684\u7ED3\u679C\u5E94\u4E3A <code>true</code>\uFF09\u3002</p></blockquote><p>\u6B64\u65F6\u5982\u679C\u518D\u7ED9\u54CD\u5E94\u5F0F\u5BF9\u8C61\u7684\u5C5E\u6027\u91CD\u590D\u8D4B\u503C\uFF0C\u5982\u679C\u8D4B\u4E88\u7684\u503C\u662F\u76F8\u540C\u7684\uFF0C\u5219\u53EA\u4F1A\u89E6\u53D1\u4E00\u6B21 <code>trigger</code>\uFF0C\u5373\u53EA\u4F1A\u6267\u884C\u4E00\u6B21\u526F\u4F5C\u7528\u51FD\u6570\uFF0C\u8FDB\u800C\u63D0\u5347\u4E86\u7A0B\u5E8F\u6027\u80FD\u3002</p></div><pre class="language-js"><code class="language-javascript">    <span class="token function">set</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> key<span class="token punctuation">,</span> value<span class="token punctuation">,</span> receiver<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">let</span> oldValue <span class="token operator">=</span> target<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">;</span>  <span class="token comment">// \u65B0\u589E</span>
        <span class="token comment">// \u65B0\u65E7\u503C\u90FD\u6709\u53EF\u80FD\u5C5E\u4E8E\u54CD\u5E94\u5F0F\u5BF9\u8C61</span>
        <span class="token comment">// \u5C06\u5B83\u4EEC\u90FD\u8F6C\u4E3A\u539F\u751F\u5F15\u7528\uFF0C\u65B9\u4FBF\u505A\u5BF9\u6BD4</span>
        value <span class="token operator">=</span> <span class="token function">toRaw</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span>
        oldValue <span class="token operator">=</span> <span class="token function">toRaw</span><span class="token punctuation">(</span>oldValue<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">const</span> hadKey <span class="token operator">=</span> <span class="token function">isArray</span><span class="token punctuation">(</span>target<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token function">isIntegerKey</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span>
            <span class="token operator">?</span> <span class="token function">Number</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span> <span class="token operator">&lt;</span> target<span class="token punctuation">.</span>length
            <span class="token operator">:</span> <span class="token function">hasOwn</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> key<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">const</span> res <span class="token operator">=</span> Reflect<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> key<span class="token punctuation">,</span> value<span class="token punctuation">,</span> receiver<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>hadKey<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token function">trigger</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> key<span class="token punctuation">,</span> <span class="token string">&#39;add&#39;</span><span class="token punctuation">,</span> value<span class="token punctuation">)</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">hasChanged</span><span class="token punctuation">(</span>value<span class="token punctuation">,</span> oldValue<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token comment">// \u65B0\u589E\u5224\u65AD</span>
            <span class="token function">trigger</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> key<span class="token punctuation">,</span> <span class="token string">&#39;set&#39;</span><span class="token punctuation">,</span> value<span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> res<span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
</code></pre><h2>4.2 \u6A21\u5757\u89E3\u8026</h2><p>\u76EE\u524D\u6211\u4EEC\u5DF2\u7ECF\u5B9E\u73B0\u4E86\u4E00\u4E2A\u529F\u80FD\u57FA\u672C\u5B8C\u5907\u7684 <code>reactive</code> \u63A5\u53E3\uFF0C\u53EA\u662F\u5404\u4E2A\u529F\u80FD\u7684\u4EE3\u7801\u5757\u90FD\u5199\u5728\u4E86\u4E00\u8D77\uFF0C\u8FD9\u5E76\u4E0D\u5229\u4E8E\u9879\u76EE\u7684\u9605\u8BFB\u548C\u7EF4\u62A4\u3002</p><p>\u6211\u4EEC\u53EF\u4EE5\u628A\u6A21\u5757\u89E3\u8026\u5904\u7406\uFF0C\u5C06\u5176\u62C6\u5206\u4E3A <code>reactive.js</code>\u3001<code>baseHandlers.js</code>\u3001<code>effect.js</code> \u4E09\u4E2A\u5C0F\u6A21\u5757\u3002</p><p>\u9274\u4E8E\u8FD9\u662F\u7B80\u5355\u7684\u4EE3\u7801\u68B3\u7406\u5DE5\u4F5C\uFF0C\u6545\u4E0D\u5728\u672C\u6587\u8D58\u8FF0\uFF0C\u8BFB\u8005\u53EF\u4EE5<a href="https://github.com/devazine/vue-analysis/tree/main/1-reactive/6">\u70B9\u51FB\u8FD9\u91CC</a>\u83B7\u53D6\u6700\u7EC8\u7684\u4EE3\u7801\u3002</p>`,15);function X(p,o){return Q}const h={render:X};h.__hmrId="/Users/lanbangjue/Documents/GitHub/devazine/src/pages/fe/source-analysis/vue/markdowns/3-9.md";h.__toc=[];const Z={components:{Md3_1:i,Md3_2:r,Md3_3:d,Md3_4:g,Md3_5:y,Md3_6:m,Md3_7:f,Md3_8:w,Md3_9:h,CodePen:R},setup(){return{}}};function nn(p,o,sn,an,tn,pn){const v=a("Md3_1"),c=a("CodePen"),_=a("Md3_2"),b=a("Md3_3"),j=a("Md3_4"),M=a("Md3_5"),E=a("Md3_6"),I=a("Md3_7"),x=a("Md3_8"),A=a("Md3_9");return u(),l(k,null,[n(v),n(c,{id:"OJzGRGY",height:"470"}),n(_),n(c,{id:"QWaPzoL"}),n(b),n(c,{id:"xxYxJeY"}),n(j),n(c,{id:"BaYyYEr",tab:"html"}),n(M),n(c,{id:"zYRxyVJ",tab:"html"}),n(E),n(c,{id:"KKQwEQO",tab:"html"}),n(I),n(c,{id:"rNJVBWq",tab:"html"}),n(x),n(c,{id:"LYQpydo",tab:"html"}),n(A)],64)}const ln=V(Z,[["render",nn]]);export{ln as default};
